name: Quality Gates Pipeline

on:
  # Run on pull requests to main branch
  pull_request:
    branches: [ main ]
  # Run on pushes to main branch
  push:
    branches: [ main ]

jobs:
  # Job 1: Code Quality & Testing
  quality-check:
    name: Quality Check
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run TypeScript type check
        run: npx tsc --noEmit
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Check code formatting
        run: npx prettier --check "src/**/*.{ts,tsx,js,jsx,json,css,md}"
        
      - name: Build application
        run: npm run build:ci  # Job 2: Security Audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit --audit-level moderate
        
      - name: Check for known vulnerabilities
        run: npx audit-ci --moderate

  # Job 3: Build Test (Production-like)
  build-test:
    name: Production Build Test
    runs-on: ubuntu-latest
    needs: [quality-check]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build for production
        run: npm run build:ci
        
      - name: Test production build start
        run: |
          npm run start &
          sleep 10
          curl -f http://localhost:3000 || exit 1
          pkill -f "npm run start"

  # Note: Deployment jobs removed - manual deployment to Vercel for now
  # When ready to add auto-deployment, configure these GitHub secrets:
  # - VERCEL_TOKEN (from vercel.com/account/tokens)
  # - VERCEL_ORG_ID (from your Vercel dashboard)
  # - VERCEL_PROJECT_ID (from your Vercel project settings)

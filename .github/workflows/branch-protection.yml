name: Branch Protection

on:
  pull_request:
    branches: [ main ]

jobs:
  # Prevent direct pushes to main
  protect-main:
    name: Protect Main Branch
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && github.actor != 'dependabot[bot]'
    
    steps:
      - name: Block direct push to main
        run: |
          echo "‚ùå Direct pushes to main branch are not allowed!"
          echo "Please create a pull request instead."
          exit 1

  # Check PR requirements
  pr-requirements:
    name: PR Requirements Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Check PR title
        run: |
          if [[ ! "${{ github.event.pull_request.title }}" =~ ^(feat|fix|docs|style|refactor|test|chore)(\(.+\))?!?:\ .+ ]]; then
            echo "‚ùå PR title must follow conventional commits format"
            echo "Examples: feat: add new feature, fix: resolve bug, docs: update README"
            exit 1
          fi
          
      - name: Check PR description
        run: |
          if [[ -z "${{ github.event.pull_request.body }}" ]]; then
            echo "‚ùå PR description is required"
            exit 1
          fi

  # Size check
  size-check:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
        - name: Build and check size
        run: |
          npm run build:ci
          echo "üìä Build completed successfully"      - name: Comment build stats
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Read build stats (Next.js creates this)
            let stats = "‚úÖ Build completed successfully!";
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üìä Build Results\n\n${stats}`
            });
